@page "/"
@using Warehouse.Client.Services.Reports;
@using Warehouse.Contracts.Product;
@using Warehouse.Contracts.Reports;
@attribute [Authorize]
@inject IReportService _reportService;
<br>
<h2 align="center">SMART WAREHOUSE</h2>
<br>
@if (isError)
{
    <Alert BackgroundColor="TablerColor.Danger" Title="Error" Dismissible>
        <div class="text-secondary">@errorMessage</div>
    </Alert>
}

@if (isLoading)
{
    <br />
    <Progress Color="TablerColor.Blue" Indeterminate />
}

<Row class="row-deck row-cards">
    <RowCol Sm="6" Lg="3">
        <Card Size="CardSize.Small">
            <CardBody>
                <div class="row align-items-center">
                    <RowCol Auto>
                        <span class="bg-primary text-white avatar">
                            <Icon IconType="Icons.Currency_dollar" />
                        </span>
                    </RowCol>

                    <div class="col">
                        <h3 class="mb-0">
                            Sum of sold products
                        </h3>
                        <div class="text-secondary">
                            @productAggregatesResponse.SalesSum
                        </div>
                    </div>
                </div>
            </CardBody>
        </Card>
    </RowCol>

    <RowCol Sm="6" Lg="3">
        <Card Size="CardSize.Small">
            <CardBody>
                <div class="row align-items-center">
                    <RowCol Auto>
                        <span class="bg-success text-white avatar">
                            <Icon IconType="Icons.Shopping_cart" />
                        </span>
                    </RowCol>

                    <div class="col">
                        <h3 class="mb-0">
                            Sum of purchased products
                        </h3>
                        <div class="text-secondary">
                            @productAggregatesResponse.PurchasesSumm
                        </div>
                    </div>
                </div>
            </CardBody>
        </Card>
    </RowCol>

    <RowCol Sm="6" Lg="3">
        <Card Size="CardSize.Small">
            <CardBody>
                <div class="row align-items-center">
                    <RowCol Auto>
                        <span class="bg-azure text-white avatar">
                            <Icon IconType="Icons.Brand_producthunt" />
                        </span>
                    </RowCol>

                    <div class="col">
                        <h3 class="mb-0">
                            Sum of products
                        </h3>
                        <div class="text-secondary">
                            @productAggregatesResponse.ProductsCount
                        </div>
                    </div>
                </div>
            </CardBody>
        </Card>
    </RowCol>

    <RowCol Sm="6" Lg="3">
        <Card Size="CardSize.Small">
            <CardBody>
                <div class="row align-items-center">
                    <RowCol Auto>
                        <span class="bg-yellow text-white avatar">
                            <Icon IconType="Icons.Users" />
                        </span>
                    </RowCol>
                    <div class="col">
                        <h3 class="mb-0">
                            Customers count
                        </h3>
                        <div class="text-secondary">
                            @productAggregatesResponse.CustomersCount
                        </div>
                    </div>
                </div>
            </CardBody>
        </Card>
    </RowCol>


    <RowCol Sm="12" Lg="6">
        <Table PageSize=5 Item="SingleProductResponse">
            <HeaderTemplate>
                <strong>Most sellers</strong>
            </HeaderTemplate>
            <ChildContent>
                <Column Item="SingleProductResponse" Property="e=>e.Name" Searchable Sortable />
                <Column Item="SingleProductResponse" Property="e=>e.ProductUom" Searchable Sortable />
                <Column Item="SingleProductResponse" Property="e=>e.Quantity" Searchable Sortable />
                <Column Item="SingleProductResponse" Property="e=>e.Manufacturer" Searchable Sortable />
            </ChildContent>
        </Table>
    </RowCol>

    <RowCol Sm="12" Lg="6">
        <Table PageSize=5 Item="SingleProductResponse">
            <HeaderTemplate>
                <strong>Most purchases</strong>
            </HeaderTemplate>
            <ChildContent>
                <Column Item="SingleProductResponse" Property="e=>e.Name" Searchable Sortable />
                <Column Item="SingleProductResponse" Property="e=>e.ProductUom" Searchable Sortable />
                <Column Item="SingleProductResponse" Property="e=>e.Quantity" Searchable Sortable />
                <Column Item="SingleProductResponse" Property="e=>e.Manufacturer" Searchable Sortable />
            </ChildContent>
        </Table>
    </RowCol>



    <RowCol>

        <Table PageSize=5 Item="SingleProductResponse">
            <Column Item="SingleProductResponse" Property="e=>e.Name" Searchable Sortable />
            <Column Item="SingleProductResponse" Property="e=>e.ProductUom" Searchable Sortable />
            <Column Item="SingleProductResponse" Property="e=>e.Quantity" Searchable Sortable />
            <Column Item="SingleProductResponse" Property="e=>e.Manufacturer" Searchable Sortable />
        </Table>

    </RowCol>
</Row>

@code {
    private GetProductAggregatesQuery query = new();
    ProductAggregatesResponse productAggregatesResponse = new();

    private bool isLoading;
    protected override async Task OnInitializedAsync()
    {
        isLoading = true;
        var response = await _reportService.GetProductReports(query);
        if (response.Success)
        {
            productAggregatesResponse = response.Result;
        }
        else
        {
            ShowError(response.Error);
        }
        isLoading = false;
    }

    #region Error
    private string errorMessage;
    private bool isError;
    private void ShowError(string error)
    {
        errorMessage = error;
        isError = true;
    }

    #endregion
}